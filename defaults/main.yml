# SPDX-FileCopyrightText: 2023 - 2024 Nikita Chernyi
# SPDX-FileCopyrightText: 2023 - 2025 Slavi Pantaleev
# SPDX-FileCopyrightText: 2024 Sergio Durigan Junior
# SPDX-FileCopyrightText: 2025 MASH project contributors
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
# Project source code URL: https://github.com/go-gitea/gitea

gitea_enabled: true

gitea_identifier: gitea
gitea_base_path: "/{{ gitea_identifier }}"
gitea_data_dir_path: "{{ gitea_base_path }}/data"
gitea_config_dir_path: "{{ gitea_base_path }}/config"

# renovate: datasource=docker depName=gitea/gitea
gitea_version: 1.23.8

gitea_uid: ''
gitea_gid: ''

gitea_scheme: https

# The fully-qualified name of your Gitea server (e.g. `gitea.example.com`)
gitea_hostname: ''

# The path at which Gitea is exposed.
gitea_path_prefix: /

gitea_container_image: "{{ gitea_container_image_registry_prefix }}gitea/gitea:{{ gitea_container_image_tag }}"
gitea_container_image_tag: "{{ gitea_version }}-rootless"
gitea_container_image_registry_prefix: "{{ gitea_container_image_registry_prefix_upstream }}"
gitea_container_image_registry_prefix_upstream: "{{ gitea_container_image_registry_prefix_upstream_default }}"
gitea_container_image_registry_prefix_upstream_default: docker.io/
gitea_container_image_force_pull: "{{ gitea_container_image.endswith(':latest') }}"

gitea_container_image_self_build: false
gitea_container_image_self_build_name: "go-gitea/gitea:{{ gitea_container_image_self_build_repo_version }}"
gitea_container_image_self_build_repo: "https://github.com/go-gitea/gitea.git"
gitea_container_image_self_build_repo_version: "{{ 'v' + gitea_version if gitea_version != 'latest' else 'main' }}"
gitea_container_image_self_build_src_files_path: "{{ gitea_base_path }}/docker-src"

gitea_http_bind_port: ''
gitea_ssh_bind_port: "{{ gitea_ssh_port }}"

# The base container network. It will be auto-created by this role if it doesn't exist already.
gitea_container_network: "{{ gitea_identifier }}"

# The port number in the container
gitea_container_http_port: 3000

gitea_ssh_port: 22

# A list of additional container networks that the container would be connected to.
# The role does not create these networks, so make sure they already exist.
# Use this to expose this container to another reverse proxy, which runs in a different container network.
gitea_container_additional_networks: "{{ gitea_container_additional_networks_auto + gitea_container_additional_networks_custom }}"
gitea_container_additional_networks_auto: []
gitea_container_additional_networks_custom: []

# gitea_container_labels_traefik_enabled controls whether labels to assist a Traefik reverse-proxy will be attached to the container.
# See `../templates/labels.j2` for details.
#
# To inject your own other container labels, see `gitea_container_labels_additional_labels`.
gitea_container_labels_traefik_enabled: true
gitea_container_labels_traefik_docker_network: ''
gitea_container_labels_traefik_hostname: "{{ gitea_hostname }}"
# The path prefix must either be `/` or not end with a slash (e.g. `/gitea`).
gitea_container_labels_traefik_path_prefix: "{{ gitea_path_prefix }}"
gitea_container_labels_traefik_rule: "Host(`{{ gitea_container_labels_traefik_hostname }}`){% if gitea_container_labels_traefik_path_prefix != '/' %} && PathPrefix(`{{ gitea_container_labels_traefik_path_prefix | quote }}`){% endif %}"
gitea_container_labels_traefik_priority: 0
gitea_container_labels_traefik_entrypoints: web-secure
gitea_container_labels_traefik_tls: "{{ gitea_container_labels_traefik_entrypoints != 'web' }}"
gitea_container_labels_traefik_tls_certResolver: default  # noqa var-naming

# Controls whether a compression middleware will be injected into the middlewares list.
# This compression middleware is supposed to be defined elsewhere (using labels or a File provider, etc.) and is merely referenced by this router.
gitea_container_labels_traefik_compression_middleware_enabled: false
gitea_container_labels_traefik_compression_middleware_name: ""

# Controls which additional headers to attach to all HTTP requests.
# To add your own custom request headers, use `gitea_container_labels_traefik_additional_response_headers_custom`
gitea_container_labels_traefik_additional_request_headers: "{{ gitea_container_labels_traefik_additional_request_headers_auto | combine(gitea_container_labels_traefik_additional_request_headers_custom) }}"
gitea_container_labels_traefik_additional_request_headers_auto: |
  {{
    {}
    | combine ({'X-Script-Name': gitea_path_prefix} if gitea_path_prefix != '/' else {})
  }}
gitea_container_labels_traefik_additional_request_headers_custom: {}

# Controls which additional headers to attach to all HTTP responses.
# To add your own custom response headers, use `gitea_container_labels_traefik_additional_response_headers_custom`
gitea_container_labels_traefik_additional_response_headers: "{{ gitea_container_labels_traefik_additional_response_headers_auto | combine(gitea_container_labels_traefik_additional_response_headers_custom) }}"
gitea_container_labels_traefik_additional_response_headers_auto: |
  {{
    {}
    | combine ({'X-XSS-Protection': gitea_http_header_xss_protection} if gitea_http_header_xss_protection else {})
    | combine ({'X-Content-Type-Options': gitea_http_header_content_type_options} if gitea_http_header_content_type_options else {})
    | combine ({'Content-Security-Policy': gitea_http_header_content_security_policy} if gitea_http_header_content_security_policy else {})
    | combine ({'Permission-Policy': gitea_http_header_content_permission_policy} if gitea_http_header_content_permission_policy else {})
    | combine ({'Strict-Transport-Security': gitea_http_header_strict_transport_security} if gitea_http_header_strict_transport_security and gitea_container_labels_traefik_tls else {})
  }}
gitea_container_labels_traefik_additional_response_headers_custom: {}

# gitea_container_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `../templates/labels.j2` for details.
#
# Example:
# gitea_container_labels_additional_labels: |
#   my.label=1
#   another.label="here"
gitea_container_labels_additional_labels: ''

# Specifies the value of the `X-XSS-Protection` header
# Stops pages from loading when they detect reflected cross-site scripting (XSS) attacks.
#
# Learn more about it is here:
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
# - https://portswigger.net/web-security/cross-site-scripting/reflected
gitea_http_header_xss_protection: "1; mode=block"

# Specifies the value of the `X-Content-Type-Options` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
gitea_http_header_content_type_options: nosniff

# Specifies the value of the `Content-Security-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
gitea_http_header_content_security_policy: frame-ancestors 'self'

# Specifies the value of the `Permission-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permission-Policy
gitea_http_header_content_permission_policy: "{{ 'interest-cohort=()' if gitea_floc_optout_enabled else '' }}"

# Specifies the value of the `Strict-Transport-Security` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
gitea_http_header_strict_transport_security: "max-age=31536000; includeSubDomains{{ '; preload' if gitea_hsts_preload_enabled else '' }}"

# Controls whether to send a "Permissions-Policy interest-cohort=();" header along with all responses
#
# Learn more about what it is here:
# - https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea
# - https://paramdeo.com/blog/opting-your-website-out-of-googles-floc-network
# - https://amifloced.org/
#
# Of course, a better solution is to just stop using browsers (like Chrome), which participate in such tracking practices.
# See: `gitea_content_permission_policy`
gitea_floc_optout_enabled: true

# Controls if HSTS preloading is enabled
#
# In its strongest and recommended form, the [HSTS policy](https://www.chromium.org/hsts) includes all subdomains, and
# indicates a willingness to be "preloaded" into browsers:
# `Strict-Transport-Security: max-age=31536000; includeSubDomains; preload`
# For more information visit:
# - https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
# - https://hstspreload.org/#opt-in
# See: `gitea_http_header_strict_transport_security`
gitea_hsts_preload_enabled: false

# List of systemd services that the Gitea systemd service depends on
gitea_systemd_required_systemd_services_list: "{{ gitea_systemd_required_systemd_services_list_default + gitea_systemd_required_systemd_services_list_auto + gitea_systemd_required_systemd_services_list_custom }}"
gitea_systemd_required_systemd_services_list_default: "{{ [devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [] }}"
gitea_systemd_required_systemd_services_list_auto: []
gitea_systemd_required_systemd_services_list_custom: []

# List of systemd services that the Gitea systemd service wants
gitea_systemd_wanted_services_list: []

# gitea_environment_variables_additional_variables contains a multiline string with additional environment variables to pass to the container.
#
# Example:
# gitea_environment_variables_additional_variables: |
#   VAR=1
#   ANOTHER=value
gitea_environment_variables_additional_variables: ''

gitea_config_database_type: postgres
gitea_config_database_hostname: ''
gitea_config_database_port: 5432
gitea_config_database_name: gitea
gitea_config_database_username: ''
gitea_config_database_password: ''

# Enable this to send e-mail to watchers of a repository when something happens, like creating issues. Requires Mailer to be enabled.
# See: https://docs.gitea.com/administration/config-cheat-sheet#service-service
#
# We enable this by default if the mailer is enabled, because it makes sense to have it used for more than just transactional emails.
gitea_config_service_enable_notify_email: "{{ gitea_config_mailer_enabled }}"

gitea_config_mailer_enabled: false
gitea_config_mailer_from: ''
gitea_config_mailer_protocol: ''
gitea_config_mailer_smtp_addr: ''
gitea_config_mailer_smtp_port: 587
gitea_config_mailer_user: ''
gitea_config_mailer_passwd: ''

gitea_config_root_url: "{{ gitea_scheme }}://{{ gitea_hostname }}{{ gitea_path_prefix }}"

# Controls the `GITEA__server__SSH_PORT` environment variable.
gitea_config_server_ssh_port: "{{ gitea_ssh_port }}"

# Controls the `GITEA__server__SSH_LISTEN_PORT` environment variable.
gitea_config_server_ssh_listen_port: 2222

# Controls the RUN_USER configuration setting (`GITEA____RUN_USER` environment variable).
#
# This defaults to `git` in the upstream configuration.
#
# On startup, Gitea checks if the resolved username for the user it works with matches the RUN_USER.
#
# Because we run the container with a custom user (gitea_uid),
# and not with uid=1000 matching the git user and inside the container,
# unless we unset this, we'd get an error message:
# > `Expect user 'git' but current user is: `
# The relevant check is here: https://github.com/go-gitea/gitea/blob/ccd3a55bf4f07a390e13d48100c58fb937fd3dcf/modules/setting/setting.go#L297-L300C4
#
# Unsetting this to an empty string makes it match. Unless you gitea_uid accidentally hits some other user that is part of the container's /etc/passwd file.
#
# That said, it seems like the situation has changed (see https://github.com/mother-of-all-self-hosting/mash-playbook/issues/164)
# and we always need to set this to git, regardless of whether `gitea_uid` is 1000 or not.
gitea_config_run_user: git
